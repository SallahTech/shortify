// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  links     Link[]
}

model Link {
  id          String      @id @default(uuid())
  originalUrl String
  shortUrl    String      @unique
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  ctaOverlay  CtaOverlay?
  clicks      Click[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model CtaOverlay {
  id         String      @id @default(uuid())
  message    String
  buttonText String
  buttonUrl  String
  position   CtaPosition
  color      String
  link       Link        @relation(fields: [linkId], references: [id], onDelete: Cascade)
  linkId     String      @unique
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Click {
  id        String   @id @default(uuid())
  link      Link     @relation(fields: [linkId], references: [id], onDelete: Cascade)
  linkId    String
  ip        String?
  userAgent String?
  ctaClick  Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum CtaPosition {
  TOP_LEFT
  TOP_RIGHT
  BOTTOM_LEFT
  BOTTOM_RIGHT
  CENTER
}
